╔════════════════════════════════════════════════════════════════╗
║          QUICK GUIDE: Add Order Items to Hosted Database      ║
╚════════════════════════════════════════════════════════════════╝

📌 WHAT YOU NEED TO DO:
   Run SQL script on your Railway MySQL database to add order items

┌────────────────────────────────────────────────────────────────┐
│ METHOD 1: Railway Dashboard (RECOMMENDED - Easiest)           │
└────────────────────────────────────────────────────────────────┘

1. Go to https://railway.app/
2. Login → Select your project
3. Click on MySQL service
4. Click "Data" or "Query" tab
5. Copy ALL contents from: railway-add-items.sql
6. Paste into query window
7. Click "Run" or "Execute"
8. Check results - should say "✅ Order items added successfully!"

┌────────────────────────────────────────────────────────────────┐
│ METHOD 2: MySQL Workbench (Most Reliable)                     │
└────────────────────────────────────────────────────────────────┘

1. Railway → MySQL service → "Variables" tab
2. Copy connection details (MYSQLHOST, MYSQLPORT, etc.)
3. Open MySQL Workbench
4. Create new connection with Railway details
5. Connect
6. File → Open SQL Script → railway-add-items.sql
7. Execute (lightning bolt icon)

┌────────────────────────────────────────────────────────────────┐
│ THE SQL TO RUN (if copy-paste from file doesn't work)         │
└────────────────────────────────────────────────────────────────┘

DELETE FROM order_items WHERE order_id IN (7, 8, 9);

INSERT INTO order_items (order_id, product_id, quantity, price) VALUES
(7, 1, 2, 120.00), (7, 6, 3, 280.00), (7, 13, 2, 150.00), (7, 17, 2, 120.00),
(8, 5, 1, 150.00), (8, 17, 2, 90.00),
(9, 4, 2, 180.00), (9, 8, 2, 550.00), (9, 6, 3, 280.00), (9, 13, 1, 150.00);

UPDATE orders SET total_amount = 330.00 WHERE id = 8;

┌────────────────────────────────────────────────────────────────┐
│ VERIFY IT WORKED                                              │
└────────────────────────────────────────────────────────────────┘

Run this query:
   SELECT o.id, COUNT(oi.id) as items 
   FROM orders o 
   LEFT JOIN order_items oi ON o.id = oi.order_id 
   WHERE o.id IN (7,8,9) 
   GROUP BY o.id;

Expected result:
   Order 7: 4 items
   Order 8: 2 items  
   Order 9: 4 items

┌────────────────────────────────────────────────────────────────┐
│ AFTER RUNNING SQL                                             │
└────────────────────────────────────────────────────────────────┘

1. Go to your hosted frontend URL
2. Login as admin
3. Go to "Order Management"
4. Click the ▼ arrow to expand each order
5. You should now see all order items! 🎉

┌────────────────────────────────────────────────────────────────┐
│ WHAT THE ADMIN WILL SEE                                       │
└────────────────────────────────────────────────────────────────┘

Order #7 (Basidh Nizam):
   • 2kg Fresh Tomatoes
   • 3 bottles Fresh Milk
   • 2 loaves White Bread
   • 2 bottles Mineral Water
   Total: LKR 1,620.00

Order #8 (Geesara adhithya):
   • 1kg Onions
   • 2 bottles Mineral Water
   Total: LKR 330.00

Order #9 (Tathira Samarakoon):
   • 2kg Bananas
   • 2 dozen Farm Eggs
   • 3 bottles Fresh Milk
   • 1 loaf White Bread
   Total: LKR 2,450.00

┌────────────────────────────────────────────────────────────────┐
│ FILES CREATED                                                 │
└────────────────────────────────────────────────────────────────┘

✓ railway-add-items.sql       ← USE THIS (optimized for Railway)
✓ HOSTED-DATABASE-SETUP.md    ← Detailed instructions
✓ quick-add-items.sql          ← Simple version
✓ add-order-items.sql          ← Detailed version with checks

┌────────────────────────────────────────────────────────────────┐
│ TROUBLESHOOTING                                               │
└────────────────────────────────────────────────────────────────┘

Error: "Product doesn't exist"
→ Products might have different IDs
→ Run: SELECT id, name FROM products LIMIT 20;
→ Update product_id values accordingly

Error: "Order doesn't exist"  
→ Check order IDs: SELECT id FROM orders;
→ Update order_id values in the script

Error: "Duplicate entry"
→ Items already added
→ Run: DELETE FROM order_items WHERE order_id IN (7,8,9);
→ Then run INSERT again

╔════════════════════════════════════════════════════════════════╗
║  🎯 GOAL: Admin can see order items and fulfill customer orders ║
╚════════════════════════════════════════════════════════════════╝
